name: Multi-branch Pipeline

on:
  push:
    branches:
      - development
      - master
  pull_request:
    branches:
      - qa
      - master
    types:
      - "closed"
  workflow_dispatch:
    branches:
     - feature/*
jobs:
  env_setup:
    runs-on: ubuntu-latest
    steps:
      - name: Some check on branch
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "env_name=Production" >> $GITHUB_OUTPUT
            echo "S3_DIR=prod" >> $GITHUB_OUTPUT
            echo "URL=prod.aws.com" > perperties.sh
          elif [ "${{ github.ref }}" = "refs/heads/development" ]; then
            echo "env_name=development" >> $GITHUB_OUTPUT
            echo "S3_DIR=dev" >> $GITHUB_OUTPUT
            echo "URL=dev.aws.com" > perperties.sh
          else
             echo "env_name=stage" >> $GITHUB_OUTPUT
             echo "S3_DIR=stage" >> $GITHUB_OUTPUT
             echo "URL=stage.aws.com" > perperties.sh
          fi         
          
      - name: Use variable setup in previous step
        run: echo "I'm using variable ${{ steps.branch_check.outputs.env_name }}"
      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: properties.sh
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}
      S3_DIR: ${{ steps.branch_check.outputs.S3_DIR}}
  Build:
    runs-on: ubuntu-latest
    needs: env_setup
    environment: ${{ needs.env_setup.outputs.env_name }}
    steps:
      - name: test
        run: |
          echo ${{ needs.env_setup.outputs.env_name }}
          echo ${{ vars.E_TEST }}
          echo ${{ needs.env_setup.outputs.S3_DIR }}
          echo "ip=${{ secrets.DB_IP }}"" > test.sh
          source test.sh
          echo $ip
      - name: image test
        shell: bash
        id: imagename
        run: |
          echo "image=904956661349.dkr.ecr.us-west-2.amazonaws.com/tent-vega-data-logger/${{ needs.env_setup.outputs.S3_DIR }}:$BUILD_NUMBER" >> $GITHUB_OUTPUT

    outputs:
      myimagename: ${{ steps.imagename.outputs.image }}

  deploy:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: check
        run: |
          echo ${{ needs.build.outputs.myimagename }}
          # imagename=$(awk '/image/{gsub(/("|",)/,"",$2);print $2};' task-defination.json)
