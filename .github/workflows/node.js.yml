# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main", "uat", "origin/dev" ]
  pull_request:
    branches: [ "main", "uat", "origin/dev"]
  workflow_dispatch:

jobs:
  Build_dev:
    name: Build Development
    if: github.head_ref == 'origin/dev' && github.event_name == 'push'
    #   # github.event_name == 'push'  ||
    #   # (github.event_name == 'pull_request' && github.head_ref == 'origin/dev')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    # env:
    #   branchname: refs/heads/origin/dev
      # TEST1: env.TEST1
    environment: 
      name: Development
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        # with:
        #   name: arunnetha/react    #https://github.com/arunnetha/react.git
        #   ref: ${{ env.branchname }}
      - name: Use Node.js ${{ matrix.node-version }}
        # uses: actions/setup-node@v3
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      # - name: Install dependencies, build and test
      #   run: |
      #       # npm install
      #       # npm run build
      #       # npm test
      - name: print name
        run: echo hello $TEST1
      
      # Share artifact inside workflow
      - name: Share artifact inside workflow
        uses: actions/upload-artifact@v3
        with:
          name: react-github-actions-build
          path: build

  # Feature_build:
  #   name: Build feature
  #   if: github.head_ref == 'uat' && github.event_name == 'push'
  #   # if: |
  #   #   github.event_name == 'push'  ||
  #   #   (github.event_name == 'pull_request' && github.head_ref == 'uat')
  #   # if: github.event_name == 'pull_request'
  #   needs: [Build_dev]
  #   runs-on: ubuntu-latest
  #   environment: 
  #     name: Development
  #   steps:
  #     - name: Clone repository
  #       uses: actions/checkout@v3
  #       with:
  #         name: arunnetha/react    #https://github.com/arunnetha/react.git
  #         ref: refs/heads/uat
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       # uses: actions/setup-node@v3
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: 'npm'
  #     - name: Install dependencies
  #       run: npm install
  #     # - run: npm ci
  #     - name: build
  #       run: npm run build
  #     - run: npm test
      
  #     # Share artifact inside workflow
  #     - name: Share artifact inside workflow
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: react-github-actions-build
  #         path: build

  # Build_Production:
  #   name: Build Production
  #   if: github.head_ref == 'master' && github.event_name == 'push'
  #   # if: |
  #   #   github.event_name == 'push'  ||
  #   #   (github.event_name == 'pull_request' && github.head_ref == 'master')
  #   needs: [Build_dev]
  #   runs-on: ubuntu-latest
  #   environment: 
  #     name: production
  #   steps:
  #     - name: Clone repository
  #       uses: actions/checkout@v3
  #       with:
  #         name: arunnetha/react    #https://github.com/arunnetha/react.git
  #         ref: refs/heads/origin/master
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       # uses: actions/setup-node@v3
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: 'npm'
  #     - name: Install dependencies
  #       run: npm install
  #     # - run: npm ci
  #     - name: build
  #       run: npm run build
  #     - run: npm test
      
  #     # Share artifact inside workflow
  #     - name: Share artifact inside workflow
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: react-github-actions-build
  #         path: build


